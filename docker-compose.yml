version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2182:2181"
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
    ports:
      - "29092:29092"
      - "9092:9092"
    networks:
      - backend
    restart: always

  producer:
    build: ./back/producer 
    environment:
      KAFKA_BROKER_URL: kafka:9092
      KAFKA_TOPIC: chat-messages
    depends_on:
      - kafka
    volumes:
      - ./back/producer:/app
    ports:
      - "8000:8000"
      - "8003:8003"  # Prometheus metrics port
    networks:
      - backend

  consumer:
    build: ./back/consumer
    environment:
      KAFKA_BROKER_URL: kafka:9092
      KAFKA_TOPIC: chat-messages
    depends_on:
      - kafka
    volumes:
      - ./back/consumer:/app
    ports:
      - "8001:8001"
      - "8004:8004"  # Prometheus metrics port 
    networks:
      - backend

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - backend
    restart: always

  mongo-service:
    build: ./back/services
    ports:
      - "8002:8002"
      - "8005:8005"  # Prometheus metrics port
    networks:
      - backend
    depends_on:
      - mongodb

  front:
    build:
      context: ./front
    depends_on:
      - kafka
    networks:
      - backend
  
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.route-prefix=/prometheus'
      - '--web.external-url=http://${HOST_URL}/prometheus/'
    networks:
      - backend
    depends_on:
      - producer
      - consumer
      - mongo-service

  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    volumes:
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
      - grafana_data:/var/lib/grafana
    networks:
      - backend
    depends_on:
      - prometheus
    environment:
      - GF_SERVER_ROOT_URL=/grafana/

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - front
      - mongo-service
      - prometheus
      - grafana
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  mongodb_data:
  grafana_data: